///////////////////////////////////////////////////////////////////////////////////
// Модуль - Axlsign Клиент Сервер
//
// MIT License Copyright (c) 2020 AcrylPlatform.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights 
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
// copies of the Software, and to permit persons to whom the Software 
// is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be 
// included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT 
// SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE 
// OR OTHER DEALINGS IN THE SOFTWARE.
//
// Curve25519 signatures idea and math by Trevor Perrin
// https://moderncrypto.org/mail-archive/curves/2014/000205.html
// Derived from TweetNaCl.js (https://tweetnacl.js.org/)
// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Ported to 1C in 2019 by Artyom Serov
//
///////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////
#Область СлужебныеПроцедурыФункции

///////////////////////////////////////////////////////////////////////////////////
#Область ОберткаОбщихФункций

Функция ПобитовыйСдвигВправоБеззнаковый(Число, Смещение)
	
	Возврат Crypt_ОбщегоНазначенияКлиентСевер.ПобитовыйСдвигВправоСЗаполнениемНулями(Число, Смещение);
	
КонецФункции

Функция пСдвигВЛево(Число, Смещение, Разрядность = 32, Беззнаковое = Ложь) 
	
	Возврат Crypt_ОбщегоНазначенияКлиентСевер.пСдвигВЛево(Число, Смещение, Разрядность, Беззнаковое);
	
КонецФункции

Функция пСдвигВПраво(Число, Смещение, Разрядность = 32, Беззнаковое = Ложь) 
	
	Возврат Crypt_ОбщегоНазначенияКлиентСевер.пСдвигВПраво(Число, Смещение, Разрядность, Беззнаковое);
	
КонецФункции

Функция пИсключительноеИли(Число1, Число2, Разрядность = 32, Беззнаковое = Ложь)

	Возврат Crypt_ОбщегоНазначенияКлиентСевер.пИсключительноеИли(Число1, Число2, Разрядность, Беззнаковое);
	
КонецФункции	

Функция пИ(Число1, Число2, Разрядность = 32, Беззнаковое = Ложь)  
	
	Возврат Crypt_ОбщегоНазначенияКлиентСевер.пИ(Число1, Число2, Разрядность, Беззнаковое);
	
КонецФункции

Функция пИли(Число1, Число2, Разрядность = 32, Беззнаковое = Ложь) 
	
	Возврат Crypt_ОбщегоНазначенияКлиентСевер.пИли(Число1, Число2, Разрядность, Беззнаковое);
	
КонецФункции

Функция пНе(Число, Разрядность = 32, Беззнаковое = Ложь)  
	
	Возврат Crypt_ОбщегоНазначенияКлиентСевер.пНе(Число, Разрядность, Беззнаковое);
	
КонецФункции

Функция ПреведениеКДиапазону(Знач ТипизированныйМассив, Знач Число) 
	
	Возврат Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(ТипизированныйМассив, Число);
	
КонецФункции

Функция floor(Знач Число)
	
	Возврат Crypt_ОбщегоНазначенияКлиентСевер.Округлить(Число);
	
КонецФункции

#КонецОбласти
///////////////////////////////////////////////////////////////////////////////////

Функция gf(init = Неопределено) 
	
	r = Crypt_ТипизированныеМассивы.Float64Array("r", 16);

	Если init <> Неопределено Тогда 

		Если ТипЗнч(init) <> ТипЗнч(Новый Массив) Тогда 
			
			Возврат r;
			
		КонецЕсли;
	
		Для i = 0 По init.Количество() - 1 Цикл
			
			r.r[i] = init[i];

		КонецЦикла;
			
	КонецЕсли;
			
	Возврат r;
  
КонецФункции

Функция init()
	
	this = Новый Структура;
	
	this.Вставить("t9", Crypt_ТипизированныеМассивы.Uint8Array("t9", 32)); 
	this.t9.t9[0] = 9;
	
	Возврат this;
	
КонецФункции

Процедура unpack25519(o, n_t)
	
	Если ТипЗнч(n_t) = ТипЗнч(Новый Структура) Тогда
		
		n = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(n_t).Данные;	
		
	ИначеЕсли ТипЗнч(n_t) = ТипЗнч(Новый Массив) Тогда	
		
		n = n_t;
		
	КонецЕсли;
		
	Для  i = 0 По 15 Цикл
		
    	o[i] = n[2 * i] + пСдвигВЛево(n[2 * i + 1], 8);
		
	КонецЦикла;
	
	o[15] = пИ(o[15], 32767); 
	
КонецПроцедуры

Процедура sel25519(p, q, b) 
	
  c = пНе(b - 1);
  t = 0;
  
  Для i = 0 По 15 Цикл
	  
	t = пИ(c, пИсключительноеИли(p[i], q[i]));
    p[i] = пИсключительноеИли(p[i], t);
    q[i] = пИсключительноеИли(q[i], t);
	  
  КонецЦикла;
  
КонецПроцедуры

Процедура A(o, a, b)
	
	Для i = 0 По 15 Цикл
		
		o[i] = a[i] + b[i];
		
	КонецЦикла;

КонецПроцедуры

Процедура Z(o, a, b)
	
	Для i = 0 По 15 Цикл 
		
		o[i] = a[i] - b[i];
		
	КонецЦикла;
	
КонецПроцедуры

Процедура S(o, a)
	
  M(o, a, a);
  
КонецПроцедуры

Процедура M(o, a, b) 
	
    v = 0;
    c = 0;
   t0 = 0;
   t1 = 0;
   t2 = 0;
   t3 = 0;
   t4 = 0;
   t5 = 0;
   t6 = 0;
   t7 = 0;
   t8 = 0;
   t9 = 0; 
  t10 = 0; 
  t11 = 0; 
  t12 = 0; 
  t13 = 0; 
  t14 = 0; 
  t15 = 0; 
  t16 = 0; 
  t17 = 0; 
  t18 = 0; 
  t19 = 0; 
  t20 = 0; 
  t21 = 0; 
  t22 = 0; 
  t23 = 0; 
  t24 = 0; 
  t25 = 0; 
  t26 = 0; 
  t27 = 0; 
  t28 = 0; 
  t29 = 0; 
  t30 = 0; 
 
   b0 = b[0];
   b1 = b[1];
   b2 = b[2];
   b3 = b[3];
   b4 = b[4];
   b5 = b[5];
   b6 = b[6];
   b7 = b[7];
   b8 = b[8];
   b9 = b[9]; 
  b10 = b[10]; 
  b11 = b[11]; 
  b12 = b[12]; 
  b13 = b[13]; 
  b14 = b[14]; 
  b15 = b[15];
  
  v = a[0];

  t0 = t0 + (v * b0);
  t1 = t1 + (v * b1);
  t2 = t2 + (v * b2);
  t3 = t3 + (v * b3);
  t4 = t4 + (v * b4);
  t5 = t5 + (v * b5);
  t6 = t6 + (v * b6);
  t7 = t7 + (v * b7);
  t8 = t8 + (v * b8);
  t9 = t9 + (v * b9);
  t10 = t10 + (v * b10);
  t11 = t11 + (v * b11);
  t12 = t12 + (v * b12);
  t13 = t13 + (v * b13);
  t14 = t14 + (v * b14);
  t15 = t15 + (v * b15);

  v = a[1];

  t1 = t1 + (v * b0);
  t2 = t2 + (v * b1);
  t3 = t3 + (v * b2);
  t4 = t4 + (v * b3);
  t5 = t5 + (v * b4);
  t6 = t6 + (v * b5);
  t7 = t7 + (v * b6);
  t8 = t8 + (v * b7);
  t9 = t9 + (v * b8);
  t10 = t10 + (v * b9);
  t11 = t11 + (v * b10);
  t12 = t12 + (v * b11);
  t13 = t13 + (v * b12);
  t14 = t14 + (v * b13);
  t15 = t15 + (v * b14);
  t16 = t16 + (v * b15);

  v = a[2];

  t2 = t2 + (v * b0);
  t3 = t3 + (v * b1);
  t4 = t4 + (v * b2);
  t5 = t5 + (v * b3);
  t6 = t6 + (v * b4);
  t7 = t7 + (v * b5);
  t8 = t8 + (v * b6);
  t9 = t9 + (v * b7);
  t10 = t10 + (v * b8);
  t11 = t11 + (v * b9);
  t12 = t12 + (v * b10);
  t13 = t13 + (v * b11);
  t14 = t14 + (v * b12);
  t15 = t15 + (v * b13);
  t16 = t16 + (v * b14);
  t17 = t17 + (v * b15);

  v = a[3];

  t3 = t3 + (v * b0);
  t4 = t4 + (v * b1);
  t5 = t5 + (v * b2);
  t6 = t6 + (v * b3);
  t7 = t7 + (v * b4);
  t8 = t8 + (v * b5);
  t9 = t9 + (v * b6);
  t10 = t10 + (v * b7);
  t11 = t11 + (v * b8);
  t12 = t12 + (v * b9);
  t13 = t13 + (v * b10);
  t14 = t14 + (v * b11);
  t15 = t15 + (v * b12);
  t16 = t16 + (v * b13);
  t17 = t17 + (v * b14);
  t18 = t18 + (v * b15);

  v = a[4];

  t4 = t4 + (v * b0);
  t5 = t5 + (v * b1);
  t6 = t6 + (v * b2);
  t7 = t7 + (v * b3);
  t8 = t8 + (v * b4);
  t9 = t9 + (v * b5);
  t10 = t10 + (v * b6);
  t11 = t11 + (v * b7);
  t12 = t12 + (v * b8);
  t13 = t13 + (v * b9);
  t14 = t14 + (v * b10);
  t15 = t15 + (v * b11);
  t16 = t16 + (v * b12);
  t17 = t17 + (v * b13);
  t18 = t18 + (v * b14);
  t19 = t19 + (v * b15);

  v = a[5];

  t5 = t5 + (v * b0);
  t6 = t6 + (v * b1);
  t7 = t7 + (v * b2);
  t8 = t8 + (v * b3);
  t9 = t9 + (v * b4);
  t10 = t10 + (v * b5);
  t11 = t11 + (v * b6);
  t12 = t12 + (v * b7);
  t13 = t13 + (v * b8);
  t14 = t14 + (v * b9);
  t15 = t15 + (v * b10);
  t16 = t16 + (v * b11);
  t17 = t17 + (v * b12);
  t18 = t18 + (v * b13);
  t19 = t19 + (v * b14);
  t20 = t20 + (v * b15);

  v = a[6];

  t6 = t6 + (v * b0);
  t7 = t7 + (v * b1);
  t8 = t8 + (v * b2);
  t9 = t9 + (v * b3);
  t10 = t10 + (v * b4);
  t11 = t11 + (v * b5);
  t12 = t12 + (v * b6);
  t13 = t13 + (v * b7);
  t14 = t14 + (v * b8);
  t15 = t15 + (v * b9);
  t16 = t16 + (v * b10);
  t17 = t17 + (v * b11);
  t18 = t18 + (v * b12);
  t19 = t19 + (v * b13);
  t20 = t20 + (v * b14);
  t21 = t21 + (v * b15);

  v = a[7];

  t7 = t7 + (v * b0);
  t8 = t8 + (v * b1);
  t9 = t9 + (v * b2);
  t10 = t10 + (v * b3);
  t11 = t11 + (v * b4);
  t12 = t12 + (v * b5);
  t13 = t13 + (v * b6);
  t14 = t14 + (v * b7);
  t15 = t15 + (v * b8);
  t16 = t16 + (v * b9);
  t17 = t17 + (v * b10);
  t18 = t18 + (v * b11);
  t19 = t19 + (v * b12);
  t20 = t20 + (v * b13);
  t21 = t21 + (v * b14);
  t22 = t22 + (v * b15);

  v = a[8];
  
  t8 = t8 + (v * b0);
  t9 = t9 + (v * b1);
  t10 = t10 + (v * b2);
  t11 = t11 + (v * b3);
  t12 = t12 + (v * b4);
  t13 = t13 + (v * b5);
  t14 = t14 + (v * b6);
  t15 = t15 + (v * b7);
  t16 = t16 + (v * b8);
  t17 = t17 + (v * b9);
  t18 = t18 + (v * b10);
  t19 = t19 + (v * b11);
  t20 = t20 + (v * b12);
  t21 = t21 + (v * b13);
  t22 = t22 + (v * b14);
  t23 = t23 + (v * b15);

  v = a[9];

  t9 = t9 + (v * b0);
  t10 = t10 + (v * b1);
  t11 = t11 + (v * b2);
  t12 = t12 + (v * b3);
  t13 = t13 + (v * b4);
  t14 = t14 + (v * b5);
  t15 = t15 + (v * b6);
  t16 = t16 + (v * b7);
  t17 = t17 + (v * b8);
  t18 = t18 + (v * b9);
  t19 = t19 + (v * b10);
  t20 = t20 + (v * b11);
  t21 = t21 + (v * b12);
  t22 = t22 + (v * b13);
  t23 = t23 + (v * b14);
  t24 = t24 + (v * b15);

  v = a[10];

  t10 = t10 + (v * b0);
  t11 = t11 + (v * b1);
  t12 = t12 + (v * b2);
  t13 = t13 + (v * b3);
  t14 = t14 + (v * b4);
  t15 = t15 + (v * b5);
  t16 = t16 + (v * b6);
  t17 = t17 + (v * b7);
  t18 = t18 + (v * b8);
  t19 = t19 + (v * b9);
  t20 = t20 + (v * b10);
  t21 = t21 + (v * b11);
  t22 = t22 + (v * b12);
  t23 = t23 + (v * b13);
  t24 = t24 + (v * b14);
  t25 = t25 + (v * b15);

  v = a[11];

  t11 = t11 + (v * b0);
  t12 = t12 + (v * b1);
  t13 = t13 + (v * b2);
  t14 = t14 + (v * b3);
  t15 = t15 + (v * b4);
  t16 = t16 + (v * b5);
  t17 = t17 + (v * b6);
  t18 = t18 + (v * b7);
  t19 = t19 + (v * b8);
  t20 = t20 + (v * b9);
  t21 = t21 + (v * b10);
  t22 = t22 + (v * b11);
  t23 = t23 + (v * b12);
  t24 = t24 + (v * b13);
  t25 = t25 + (v * b14);
  t26 = t26 + (v * b15);

  v = a[12];

  t12 = t12 + (v * b0);
  t13 = t13 + (v * b1);
  t14 = t14 + (v * b2);
  t15 = t15 + (v * b3);
  t16 = t16 + (v * b4);
  t17 = t17 + (v * b5);
  t18 = t18 + (v * b6);
  t19 = t19 + (v * b7);
  t20 = t20 + (v * b8);
  t21 = t21 + (v * b9);
  t22 = t22 + (v * b10);
  t23 = t23 + (v * b11);
  t24 = t24 + (v * b12);
  t25 = t25 + (v * b13);
  t26 = t26 + (v * b14);
  t27 = t27 + (v * b15);

  v = a[13];

  t13 = t13 + (v * b0);
  t14 = t14 + (v * b1);
  t15 = t15 + (v * b2);
  t16 = t16 + (v * b3);
  t17 = t17 + (v * b4);
  t18 = t18 + (v * b5);
  t19 = t19 + (v * b6);
  t20 = t20 + (v * b7);
  t21 = t21 + (v * b8);
  t22 = t22 + (v * b9);
  t23 = t23 + (v * b10);
  t24 = t24 + (v * b11);
  t25 = t25 + (v * b12);
  t26 = t26 + (v * b13);
  t27 = t27 + (v * b14);
  t28 = t28 + (v * b15);

  v = a[14];

  t14 = t14 + (v * b0);
  t15 = t15 + (v * b1);
  t16 = t16 + (v * b2);
  t17 = t17 + (v * b3);
  t18 = t18 + (v * b4);
  t19 = t19 + (v * b5);
  t20 = t20 + (v * b6);
  t21 = t21 + (v * b7);
  t22 = t22 + (v * b8);
  t23 = t23 + (v * b9);
  t24 = t24 + (v * b10);
  t25 = t25 + (v * b11);
  t26 = t26 + (v * b12);
  t27 = t27 + (v * b13);
  t28 = t28 + (v * b14);
  t29 = t29 + (v * b15);

  v = a[15];

  t15 = t15 + (v * b0);
  t16 = t16 + (v * b1);
  t17 = t17 + (v * b2);
  t18 = t18 + (v * b3);
  t19 = t19 + (v * b4);
  t20 = t20 + (v * b5);
  t21 = t21 + (v * b6);
  t22 = t22 + (v * b7);
  t23 = t23 + (v * b8);
  t24 = t24 + (v * b9);
  t25 = t25 + (v * b10);
  t26 = t26 + (v * b11);
  t27 = t27 + (v * b12);
  t28 = t28 + (v * b13);
  t29 = t29 + (v * b14);
  t30 = t30 + (v * b15);

  t0 = t0 + (38 * t16);
  t1 = t1 + (38 * t17);
  t2 = t2 + (38 * t18);
  t3 = t3 + (38 * t19);
  t4 = t4 + (38 * t20);
  t5 = t5 + (38 * t21);
  t6 = t6 + (38 * t22);
  t7 = t7 + (38 * t23);
  t8 = t8 + (38 * t24);
  t9 = t9 + (38 * t25);

  t10 = t10 + (38 * t26);
  t11 = t11 + (38 * t27);
  t12 = t12 + (38 * t28);
  t13 = t13 + (38 * t29);
  t14 = t14 + (38 * t30);
  // t15 left as is
  // first car
  c = 1;

  v = t0 + c + 65535;

  c = floor(v / 65536);

  t0 = v - c * 65536;
  v = t1 + c + 65535;
  
  c = floor(v / 65536);

  t1 = v - c * 65536;
  v = t2 + c + 65535;

  c = floor(v / 65536);

  t2 = v - c * 65536;
  v = t3 + c + 65535;

  c = floor(v / 65536);

  t3 = v - c * 65536;
  v = t4 + c + 65535;

  c = floor(v / 65536);

  t4 = v - c * 65536;
  v = t5 + c + 65535;

  c = floor(v / 65536);

  t5 = v - c * 65536;
  v = t6 + c + 65535;

  c = floor(v / 65536);

  t6 = v - c * 65536;
  v = t7 + c + 65535;

  c = floor(v / 65536);
  t7 = v - c * 65536;
  
  v = t8 + c + 65535;
  c = floor(v / 65536);
  t8 = v - c * 65536;
  
  v = t9 + c + 65535;
  c = floor(v / 65536);
  t9 = v - c * 65536;
  
  v = t10 + c + 65535;
  c = floor(v / 65536);
  t10 = v - c * 65536;
  
  v = t11 + c + 65535;
  c = floor(v / 65536);
  t11 = v - c * 65536;
  
  v = t12 + c + 65535;
  c = floor(v / 65536);
  t12 = v - c * 65536;
  
  v = t13 + c + 65535;
  c = floor(v / 65536);
  t13 = v - c * 65536;
  
  v = t14 + c + 65535;
  c = floor(v / 65536);
  t14 = v - c * 65536;
  
  v = t15 + c + 65535;
  c = floor(v / 65536);
  t15 = v - c * 65536;

  t0 = t0 + (c - 1 + 37 * (c - 1));
  // second car
  c = 1;
  v = t0 + c + 65535;
  c = floor(v / 65536);
  
  t0 = v - c * 65536;
  v = t1 + c + 65535;
  c = floor(v / 65536);
  
  t1 = v - c * 65536;
  v = t2 + c + 65535;
  c = floor(v / 65536);
  
  t2 = v - c * 65536;
  v = t3 + c + 65535;
  c = floor(v / 65536);
  
  t3 = v - c * 65536;
  v = t4 + c + 65535;
  c = floor(v / 65536);
  
  t4 = v - c * 65536;
  v = t5 + c + 65535;
  c = floor(v / 65536);
  
  t5 = v - c * 65536;
  v = t6 + c + 65535;
  c = floor(v / 65536);
  
  t6 = v - c * 65536;
  v = t7 + c + 65535;
  c = floor(v / 65536);
  
  t7 = v - c * 65536;
  v = t8 + c + 65535;
  c = floor(v / 65536);
  
  t8 = v - c * 65536;
  v = t9 + c + 65535;
  c = floor(v / 65536);
  
  t9 = v - c * 65536;
  v = t10 + c + 65535;
  c = floor(v / 65536);
  
  t10 = v - c * 65536;
  v = t11 + c + 65535;
  c = floor(v / 65536);
  
  t11 = v - c * 65536;
  v = t12 + c + 65535;
  c = floor(v / 65536);
  
  t12 = v - c * 65536;
  v = t13 + c + 65535;
  c = floor(v / 65536);
  
  t13 = v - c * 65536;
  v = t14 + c + 65535;
  c = floor(v / 65536);
  
  t14 = v - c * 65536;
  v = t15 + c + 65535;
  c = floor(v / 65536);
  
  t15 = v - c * 65536;
  t0 = t0 + (c - 1 + 37 * (c - 1));

  o[0] = t0;
  o[1] = t1;
  o[2] = t2;
  o[3] = t3;
  o[4] = t4;
  o[5] = t5;
  o[6] = t6;
  o[7] = t7;
  o[8] = t8;
  o[9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
  
КонецПроцедуры

Процедура inv25519(o, i) 
	
	c_t = gf();
	
	c = c_t.r;

	Для a = 0 По 15 Цикл 
		
		c[a] = i[a];
		
	КонецЦикла;

	a = 253;

	Пока a >= 0 Цикл
		
		S(c, c);
		
		Если (a <> 2) и (a <> 4) Тогда 
			
			M(c, c, i)

		КонецЕсли;
	
		a = a - 1;
	
	КонецЦикла;

	Для a = 0 По 15 Цикл
		
		o[a] = c[a];
		
	КонецЦикла;

КонецПроцедуры

Процедура pack25519(o, n) 

	m_t = gf();
	t_t = gf();
	
	m = m_t.r;
	t = t_t.r;

	Для i = 0 По 15 Цикл

		t[i] = n[i];

	КонецЦикла;

	car25519(t);
	car25519(t);
	car25519(t);

	j = 0;

	Пока j < 2  Цикл

	    m[0] = t[0] - 65517;

	    Для i = 1 По 14 Цикл

	        m[i] = t[i] - 65535 - пИ(пСдвигВПраво(m[i - 1], 16), 1);
	        m[i - 1] = пИ(m[i - 1], 65535);

	    КонецЦикла;

	    m[15] = t[15] - 32767 - пИ(пСдвигВПраво(m[14], 16), 1);

	    b = пИ(пСдвигВПраво(m[15], 16), 1);
		
	    m[14] = пИ(m[14], 65535);
		
	    sel25519(t, m, 1 - b);

	    j = j + 1;
		
	КонецЦикла;

	Для i = 0 По 15 Цикл
		
	    o[2 * i] = пИ(t[i], 255);
		
	    o[2 * i + 1] = пСдвигВПраво(t[i], 8);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура car25519(o)
	
	c = 1;
  
	Для i = 0 По 15 Цикл

		v = o[i] + c + 65535;

		c = floor(v / 65536);

		o[i] = v - c * 65536;

	КонецЦикла;

	o[0] = o[0] + (c - 1 + 37 * (c - 1));
	
КонецПроцедуры

Процедура set25519(r, a) 

	Для i = 0 По 15 Цикл 
	 
		r[i] = пИли(a[i], 0);
		
	КонецЦикла;

КонецПроцедуры

Функция par25519(a) 
		
	t_d = Crypt_ТипизированныеМассивы.Uint8Array("d",32);
	d = t_d.d;

	pack25519(d, ?(ТипЗнч(a) = ТипЗнч(Новый Структура),
		Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(a).Данные,
		a));
	
	Возврат пИ(d[0], 1);
	
КонецФункции

Процедура cswap(p, q, b) 
	
	Для i = 0 По 3 Цикл 
	
		sel25519(p[i].r, q[i].r, b);
		
	КонецЦикла;
  
КонецПроцедуры

Процедура add(p, q, this)

	Если Не this.Свойство("t_d2") Тогда 
		
		this.Вставить("t_d2", init_t_d2());
		
	КонецЕсли;
	
	a = gf();
	b = gf();
	c = gf();
	d = gf();
	e = gf();
	f = gf();
	g = gf();
	h = gf();
	t = gf();

	Z(a.r, p[1].r, p[0].r);
	Z(t.r, q[1].r, q[0].r);
	M(a.r, a.r, t.r);
	A(b.r, p[0].r, p[1].r);
	A(t.r, q[0].r, q[1].r);
	M(b.r, b.r, t.r);
	M(c.r, p[3].r, q[3].r);
	M(c.r, c.r, this.t_d2.r);
	M(d.r, p[2].r, q[2].r);
	A(d.r, d.r, d.r);
	Z(e.r, b.r, a.r);
	Z(f.r, d.r, c.r);
	A(g.r, d.r, c.r);
	A(h.r, b.r, a.r);
	M(p[0].r, e.r, f.r);
	M(p[1].r, h.r, g.r);
	M(p[2].r, g.r, f.r);
	M(p[3].r, e.r, h.r);

КонецПроцедуры

Процедура scalarmult(p, q, s, this) 

	set25519(p[0].r, this.gf0.r);
	set25519(p[1].r, this.gf1.r);
	set25519(p[2].r, this.gf1.r);
	set25519(p[3].r, this.gf0.r);

	i = 255;	

	Пока i >= 0 Цикл 
		
		b = пИ(пСдвигВПраво(s[пИли(floor(i / 8), 0)], пИ(i, 7)), 1); 
		
		cswap(p, q, b);
		add(q, p, this);
		add(p, p, this);
		cswap(p, q, b);

		i = i - 1;
	КонецЦикла;

КонецПроцедуры

Процедура scalarbase(p, s_t, this) 
	
	t_x = init_t_x();
	
	t_y = init_t_y();

	x = t_x.r;
	
	y = t_y.r;
	
	s = s_t[Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(s_t).Имя];
	
	q = Новый Массив;
	q.Добавить(gf());
	q.Добавить(gf());
	q.Добавить(gf());
	q.Добавить(gf());

	set25519(q[0].r, X);
	set25519(q[1].r, Y);
	set25519(q[2].r, this.gf1.r);
	M(q[3].r, X, Y);
	scalarmult(p, q, s, this);
	
КонецПроцедуры

Функция crypto_sign_direct_rnd(sm_t, m, n, sk, rnd_t)
	
	d_t = Crypt_ТипизированныеМассивы.Uint8Array("d", 64);
	h_t = Crypt_ТипизированныеМассивы.Uint8Array("h", 64);
	r_t = Crypt_ТипизированныеМассивы.Uint8Array("r", 64);
	x_t = Crypt_ТипизированныеМассивы.Float64Array("x", 64);

	d = d_t.d;
	h = h_t.h;
	r = r_t.r;
	x = x_t.x;
	
	sm = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(sm_t).Данные;
	
	rnd = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(rnd_t).Данные;
	
	p = Новый Массив();
	
	p.Добавить(gf());
	p.Добавить(gf());
	p.Добавить(gf());
	p.Добавить(gf());
	
	sm[0] = 254;
	
	Для i = 1 По 31 Цикл 
		
		sm[i] = 255;
		
	КонецЦикла;
	
	// Secret key.
	Для i = 0 По 31 Цикл 
		
		sm[32 + i] = sk[i];
		
	КонецЦикла;
	
	// Message.
	Для i = 0 По n - 1 Цикл 
		
		sm[64 + i] = m[i];

	КонецЦикла;
	
 	// Random suffix.
	Для i = 0 По 63 Цикл 
		
		sm[n + 64 + i] = rnd[i];

	КонецЦикла;
	
	crypto_hash(r, sm, n + 128);
	reduce(r_t);
	
	this = Новый Структура;
	this.Вставить("gf0", gf(16));
	this.Вставить("gf1", init_gf1());
	this.Вставить("t_d2", init_t_d2());
	
	scalarbase(p, r_t, this);
	
	pack(sm, p);
	
	Для i = 0 По 31 Цикл
		
		 sm[i + 32] = sk[32 + i];	
		
	КонецЦикла;
	
	crypto_hash(h, sm, n + 64);
	
	reduce(h_t);
	
	Для i = 0 По 31 Цикл

		sm[i + 32] = sk[32 + i];

	КонецЦикла;

	crypto_hash(h, sm, n + 64);
	reduce(h_t);

	// Wipe out random suffix.
	Для i = 0 По 63 Цикл

		sm[n + 64 + i] = 0;
		
	КонецЦикла;

	Для i = 0 По 63 Цикл

		x[i] = 0;

	КонецЦикла;

	Для i = 0 По 31 Цикл

		x[i] = r[i];
		
	КонецЦикла;

	Для i = 0 По 31 Цикл
		
		Для j = 0 По 31 Цикл
			
			x[i + j] = x[i + j] + h[i] * sk[j];
			
		КонецЦикла;
		
	КонецЦикла;
	
	Crypt_ОбщегоНазначенияКлиентСевер.СоздатьСубМассив(sm_t, 32, n + 64);
	
	modL(sm_t, x, "СубМассив");
	
	Crypt_ОбщегоНазначенияКлиентСевер.ПрименитьСубМассив(sm_t);
	
	Возврат n + 64;
	
КонецФункции

Процедура reduce(r_t)
	
	r = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(r_t).Данные;

	x_t = Crypt_ТипизированныеМассивы.Float64Array("x", 64);

	x = x_t.x;
	
	Для i = 0 По 63 Цикл 
		
		x[i] = r[i];	
		
	КонецЦикла;
	
	Для i = 0 По 63 Цикл 
		
		r[i] = 0;	
		
	КонецЦикла;
	
	ИмяДанных = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(r_t).Имя; 
	
	modL(r_t, x, ИмяДанных);
	
КонецПроцедуры

Функция init_L()

	L_T = Crypt_ТипизированныеМассивы.Float64Array("L");

	L = L_T.L;

	L.Добавить(237);
	L.Добавить(211);
	L.Добавить(245);
	L.Добавить(92);
	L.Добавить(26);
	L.Добавить(99);
	L.Добавить(18);
	L.Добавить(88);
	L.Добавить(214);
	L.Добавить(156);
	L.Добавить(247);
	L.Добавить(162);
	L.Добавить(222);
	L.Добавить(249);
	L.Добавить(222);
	L.Добавить(20);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(0);
	L.Добавить(16);

	Возврат L_T;

КонецФункции

Процедура modL(r_t, x, ИмяДанных) 

	r = r_t[ИмяДанных]; 
	
	i = 63;

	L_T = init_L();
	
	L = L_T.L;

	Пока  i >= 32 Цикл 
		
		carry = 0;

		j = i - 32;
		k = i - 12;

		Пока j < k Цикл

			x[j] = x[j] + (carry - 16 * x[i] * L[j - (i - 32)]);

			carry = пСдвигВПраво((x[j] + 128), 8);

			x[j] = x[j] - (carry * 256);

			j = j + 1;

		КонецЦикла;

		x[j] = x[j] + carry;
		x[i] = 0;

		i = i - 1;

	КонецЦикла;

	carry = 0;

	Для j = 0 По 31 Цикл 

		x[j] = x[j] + (carry - пСдвигВПраво(x[31], 4) * L[j]);
		carry = пСдвигВПраво(x[j], 8);
		x[j] = пИ(x[j], 255);

	КонецЦикла;

	Для j = 0 По 31 Цикл

		x[j] = x[j] - (carry * L[j]);

	КонецЦикла;

	Для i = 0 По 31 Цикл
		
		x[i + 1] = x[i + 1] + пСдвигВПраво(x[i], 8);
		r[i] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(r_t, пИ(x[i], 255));
	
	КонецЦикла;


КонецПроцедуры

Функция crypto_hash(out, m, n)

	hh_t = Crypt_ТипизированныеМассивы.Int32Array("hh", 8);
	hl_t = Crypt_ТипизированныеМассивы.Int32Array("hl", 8);
	x_t = Crypt_ТипизированныеМассивы.Uint8Array("x", 256);
	b = n;
	
	hh = hh_t.hh;
	hl = hl_t.hl;
	x = x_t.x;
	
	hh[0] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 1779033703);
	hh[1] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 3144134277);
	hh[2] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 1013904242);
	hh[3] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 2773480762);
	hh[4] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 1359893119);
	hh[5] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 2600822924);
	hh[6] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 528734635);
	hh[7] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 1541459225);
	hl[0] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 4089235720);
	hl[1] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 2227873595);
	hl[2] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 4271175723);
	hl[3] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 1595750129);
	hl[4] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 2917565137);
	hl[5] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 725511199);
	hl[6] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 4215389547);
	hl[7] = Crypt_ТипизированныеМассивы.ПреведениеКДиапазону(hh_t, 327033209);

	crypto_hashblocks_hl(hh, hl, m, n);
	
	n = n % 128;
	
	Для i = 0 По n - 1 Цикл 
		
		x[i] = m[b - n + i];	
		
	КонецЦикла;
	
	x[n] = 128;
	n = 256 - 128 * ?(n < 112, 1, 0);
	x[n - 9] = 0;
	
	ts64(x_t, n - 8, пИли(floor(b / 536870912), 0), пСдвигВЛево(b, 3));
	
	crypto_hashblocks_hl(hh, hl, x, n);
	
	Для i = 0 По 7 Цикл 
		
    	ts64(out, 8 * i, hh[i], hl[i]);
		
	КонецЦикла;
  
	Возврат 0;
	
КонецФункции

Процедура ts64(x_t, i, h, l) 

	Если ТипЗнч(x_t) = ТипЗнч(Новый Массив) Тогда
		
		x_array = x_t; 
		
		x_t = Crypt_ТипизированныеМассивы.Uint8Array("x", x_t.Количество());
		x_t.x = x_array;
		
	КонецЕсли;
	
	x = x_t.x;

	x[i] = ПреведениеКДиапазону(x_t, пИ(
		   ПреведениеКДиапазону(x_t, пСдвигВПраво(h, 24)), 255));
	x[i + 1] = ПреведениеКДиапазону(x_t, пИ(
			   ПреведениеКДиапазону(x_t, пСдвигВПраво(h, 16)), 255));
	x[i + 2] = ПреведениеКДиапазону(x_t, пИ(
			   ПреведениеКДиапазону(x_t, пСдвигВПраво(h, 8)), 255));
			   
	x[i + 3] = ПреведениеКДиапазону(x_t, пИ(h, 255));
	x[i + 4] =  ПреведениеКДиапазону(x_t, пИ(
				ПреведениеКДиапазону(x_t, пСдвигВПраво(l, 24)), 255));
	x[i + 5] =  ПреведениеКДиапазону(x_t, пИ(
				ПреведениеКДиапазону(x_t, пСдвигВПраво(l, 16)), 255));
	x[i + 6] =  ПреведениеКДиапазону(x_t, пИ(
				ПреведениеКДиапазону(x_t, пСдвигВПраво(l, 8)), 255));
	x[i + 7] = ПреведениеКДиапазону(x_t, пИ(l, 255));

	Если x_array <> Неопределено Тогда 
		
		x_t = x_t.x;
		
	КонецЕсли;
	
КонецПроцедуры

Функция init_k()
	
	K = Новый Массив;
	K.Добавить(1116352408);
	K.Добавить(3609767458);
	K.Добавить(1899447441);
	K.Добавить(602891725);
	K.Добавить(3049323471);
	K.Добавить(3964484399);
	K.Добавить(3921009573);
	K.Добавить(2173295548);
	K.Добавить(961987163);
	K.Добавить(4081628472);
	K.Добавить(1508970993);
	K.Добавить(3053834265);
	K.Добавить(2453635748);
	K.Добавить(2937671579);
	K.Добавить(2870763221);
	K.Добавить(3664609560);
	K.Добавить(3624381080);
	K.Добавить(2734883394);
	K.Добавить(310598401);
	K.Добавить(1164996542);
	K.Добавить(607225278);
	K.Добавить(1323610764);
	K.Добавить(1426881987);
	K.Добавить(3590304994);
	K.Добавить(1925078388);
	K.Добавить(4068182383);
	K.Добавить(2162078206);
	K.Добавить(991336113);
	K.Добавить(2614888103);
	K.Добавить(633803317);
	K.Добавить(3248222580);
	K.Добавить(3479774868);
	K.Добавить(3835390401);
	K.Добавить(2666613458);
	K.Добавить(4022224774);
	K.Добавить(944711139);
	K.Добавить(264347078);
	K.Добавить(2341262773);
	K.Добавить(604807628);
	K.Добавить(2007800933);
	K.Добавить(770255983);
	K.Добавить(1495990901);
	K.Добавить(1249150122);
	K.Добавить(1856431235);
	K.Добавить(1555081692);
	K.Добавить(3175218132);
	K.Добавить(1996064986);
	K.Добавить(2198950837);
	K.Добавить(2554220882);
	K.Добавить(3999719339);
	K.Добавить(2821834349);
	K.Добавить(766784016);
	K.Добавить(2952996808);
	K.Добавить(2566594879);
	K.Добавить(3210313671);
	K.Добавить(3203337956);
	K.Добавить(3336571891);
	K.Добавить(1034457026);
	K.Добавить(3584528711);
	K.Добавить(2466948901);
	K.Добавить(113926993);
	K.Добавить(3758326383);
	K.Добавить(338241895);
	K.Добавить(168717936);
	K.Добавить(666307205);
	K.Добавить(1188179964);
	K.Добавить(773529912);
	K.Добавить(1546045734);
	K.Добавить(1294757372);
	K.Добавить(1522805485);
	K.Добавить(1396182291);
	K.Добавить(2643833823);
	K.Добавить(1695183700);
	K.Добавить(2343527390);
	K.Добавить(1986661051);
	K.Добавить(1014477480);
	K.Добавить(2177026350);
	K.Добавить(1206759142);
	K.Добавить(2456956037);
	K.Добавить(344077627);
	K.Добавить(2730485921);
	K.Добавить(1290863460);
	K.Добавить(2820302411);
	K.Добавить(3158454273);
	K.Добавить(3259730800);
	K.Добавить(3505952657);
	K.Добавить(3345764771);
	K.Добавить(106217008);
	K.Добавить(3516065817);
	K.Добавить(3606008344);
	K.Добавить(3600352804);
	K.Добавить(1432725776);
	K.Добавить(4094571909);
	K.Добавить(1467031594);
	K.Добавить(275423344);
	K.Добавить(851169720);
	K.Добавить(430227734);
	K.Добавить(3100823752);
	K.Добавить(506948616);
	K.Добавить(1363258195);
	K.Добавить(659060556);
	K.Добавить(3750685593);
	K.Добавить(883997877);
	K.Добавить(3785050280);
	K.Добавить(958139571);
	K.Добавить(3318307427);
	K.Добавить(1322822218);
	K.Добавить(3812723403);
	K.Добавить(1537002063);
	K.Добавить(2003034995);
	K.Добавить(1747873779);
	K.Добавить(3602036899);
	K.Добавить(1955562222);
	K.Добавить(1575990012);
	K.Добавить(2024104815);
	K.Добавить(1125592928);
	K.Добавить(2227730452);
	K.Добавить(2716904306);
	K.Добавить(2361852424);
	K.Добавить(442776044);
	K.Добавить(2428436474);
	K.Добавить(593698344);
	K.Добавить(2756734187);
	K.Добавить(3733110249);
	K.Добавить(3204031479);
	K.Добавить(2999351573);
	K.Добавить(3329325298);
	K.Добавить(3815920427);
	K.Добавить(3391569614);
	K.Добавить(3928383900);
	K.Добавить(3515267271);
	K.Добавить(566280711);
	K.Добавить(3940187606);
	K.Добавить(3454069534);
	K.Добавить(4118630271);
	K.Добавить(4000239992);
	K.Добавить(116418474);
	K.Добавить(1914138554);
	K.Добавить(174292421);
	K.Добавить(2731055270);
	K.Добавить(289380356);
	K.Добавить(3203993006);
	K.Добавить(460393269);
	K.Добавить(320620315);
	K.Добавить(685471733);
	K.Добавить(587496836);
	K.Добавить(852142971);
	K.Добавить(1086792851);
	K.Добавить(1017036298);
	K.Добавить(365543100);
	K.Добавить(1126000580);
	K.Добавить(2618297676);
	K.Добавить(1288033470);
	K.Добавить(3409855158);
	K.Добавить(1501505948);
	K.Добавить(4234509866);
	K.Добавить(1607167915);
	K.Добавить(987167468);
	K.Добавить(1816402316);
	K.Добавить(1246189591);
	
	Возврат K;
	
КонецФункции

Функция crypto_hashblocks_hl(hh, hl, m, n)
	
	k = init_k();
	
	wh_t = Crypt_ТипизированныеМассивы.Int32Array("wh", 16);
	wl_t = Crypt_ТипизированныеМассивы.Int32Array("wl", 16);
	
	wh = wh_t.wh;
	wl = wl_t.wl;

	ah0 = hh[0];
	ah1 = hh[1];
	ah2 = hh[2];
	ah3 = hh[3];
	ah4 = hh[4];
	ah5 = hh[5];
	ah6 = hh[6];
	ah7 = hh[7];
	al0 = hl[0];
	al1 = hl[1];
	al2 = hl[2];
	al3 = hl[3];
	al4 = hl[4];
	al5 = hl[5];
	al6 = hl[6];
	al7 = hl[7];
	
	pos = 0;
	
	Пока n >= 128 Цикл

		Для i = 0 по 15 Цикл

			j = 8 * i + pos;

			wh[i] = ПреведениеКДиапазону(wh_t, пИли(
					ПреведениеКДиапазону(wh_t, пСдвигВлево(m[j + 0], 24)), 
					ПреведениеКДиапазону(wh_t, пИли(
					ПреведениеКДиапазону(wh_t, пСдвигВлево(m[j + 1], 16)),
					ПреведениеКДиапазону(wh_t, пИли(
					ПреведениеКДиапазону(wh_t, пСдвигВлево(m[j + 2], 8)), m[j + 3]))))));

			wl[i] = ПреведениеКДиапазону(wl_t, пИли(
					ПреведениеКДиапазону(wl_t, пСдвигВлево(m[j + 4], 24)), 
					ПреведениеКДиапазону(wl_t, пИли(
					ПреведениеКДиапазону(wl_t, пСдвигВлево(m[j + 5], 16)),
					ПреведениеКДиапазону(wl_t, пИли(
					ПреведениеКДиапазону(wl_t, пСдвигВлево(m[j + 6], 8)), m[j + 7]))))));

		КонецЦикла;

		Для i = 0 По 79 Цикл 

			bh0 = ah0;
			bh1 = ah1;
			bh2 = ah2;
			bh3 = ah3;
			bh4 = ah4;
			bh5 = ah5;
			bh6 = ah6;
			bh7 = ah7;
			bl0 = al0;
			bl1 = al1;
			bl2 = al2;
			bl3 = al3;
			bl4 = al4;
			bl5 = al5;
			bl6 = al6;
			bl7 = al7;

			// add
			h = ah7;
			l = al7;
			a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));

			// Sigma1
			
			zu1 = ПреведениеКДиапазону(wh_t, пСдвигВлево(al4, (32 - 14)));
			zu2 = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(ah4, 14));
			z1 = ПреведениеКДиапазону(wh_t, пИли(zu2, zu1));

			gu1 = ПреведениеКДиапазону(wh_t, пСдвигВлево(al4, (32 - 18)));
			gu2 = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(ah4, 18));
			g1 = ПреведениеКДиапазону(wh_t, пИли(gu2, gu1));

			pu1 = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(al4, (41 - 32)));
			pu2 = ПреведениеКДиапазону(wh_t, пСдвигВлево(ah4, (32 - (41 - 32))));
			p1 = ПреведениеКДиапазону(wh_t, пИли(pu1, pu2));

			
			h = ПреведениеКДиапазону(wh_t, пИсключительноеИли(z1, 
				ПреведениеКДиапазону(wh_t, пИсключительноеИли(g1, p1))));

							
			zu1 = ПреведениеКДиапазону(wh_t, пСдвигВлево(ah4, (32 - 14)));
			zu2 = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(al4, 14));
			z1 = ПреведениеКДиапазону(wh_t, пИли(zu2, zu1));

			gu1 = ПреведениеКДиапазону(wh_t, пСдвигВлево(ah4, (32 - 18)));
			gu2 = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(al4, 18));
			g1 = ПреведениеКДиапазону(wh_t, пИли(gu2, gu1));

			pu1 = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(ah4, (41 - 32)));
			pu2 = ПреведениеКДиапазону(wh_t, пСдвигВлево(al4, (32 - (41 - 32))));
			p1 = ПреведениеКДиапазону(wh_t, пИли(pu1, pu2));

			l = ПреведениеКДиапазону(wh_t, пИсключительноеИли(z1, 
				ПреведениеКДиапазону(wh_t, пИсключительноеИли(g1, p1))));

			a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));

			// Ch
			h = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
				ПреведениеКДиапазону(wh_t, пИ(ah4, ah5)), 
				ПреведениеКДиапазону(wh_t, пИ(
				ПреведениеКДиапазону(wh_t, пНе(ah4)), ah6))));
			l = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
				ПреведениеКДиапазону(wh_t, пИ(al4, al5)), 
				ПреведениеКДиапазону(wh_t, пИ(
				ПреведениеКДиапазону(wh_t, пНе(al4)), al6))));

			a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));

			// K
			h = K[i * 2];
			l = K[i * 2 + 1];
			a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));

			// w
			h = wh[i % 16];
			l = wl[i % 16];
			a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
			c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
			
			th = ПреведениеКДиапазону(wh_t, пИли(
				 ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
				 ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
				 
			tl = ПреведениеКДиапазону(wh_t, пИли(
				 ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
				 ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
			
			// add
			h = th;
			l = tl;
			a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));

			// Sigma0
			h = ПреведениеКДиапазону(wh_t, пИсключительноеИли(ПреведениеКДиапазону(wh_t, пИли(
				ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(ah0, 28)), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(al0, (32 - 28))))), 
				ПреведениеКДиапазону(wh_t, пИсключительноеИли(ПреведениеКДиапазону(wh_t, пИли(
				ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(al0, (34 - 32))), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(ah0, (32 - (34 - 32)))))),
				ПреведениеКДиапазону(wh_t, пИли(ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(al0, (39 - 32))), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(ah0, (32 - (39 - 32))))))))));

			l = ПреведениеКДиапазону(wh_t, пИсключительноеИли(ПреведениеКДиапазону(wh_t, пИли(
				ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(al0, 28)), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(ah0, (32 - 28))))), 
				ПреведениеКДиапазону(wh_t, пИсключительноеИли(ПреведениеКДиапазону(wh_t, пИли(
				ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(ah0, (34 - 32))), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(al0, (32 - (34 - 32)))))),
				ПреведениеКДиапазону(wh_t, пИли(ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(ah0, (39 - 32))), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(al0, (32 - (39 - 32))))))))));


			a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));

			// Maj
			h = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
				ПреведениеКДиапазону(wh_t, пИ(ah0, ah1)), 
				ПреведениеКДиапазону(wh_t, пИсключительноеИли(
				ПреведениеКДиапазону(wh_t, пИ(ah0, ah2)), 
				ПреведениеКДиапазону(wh_t, пИ(ah1, ah2))))));
			l = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
				ПреведениеКДиапазону(wh_t, пИ(al0, al1)), 
				ПреведениеКДиапазону(wh_t, пИсключительноеИли(
				ПреведениеКДиапазону(wh_t, пИ(al0, al2)), 
				ПреведениеКДиапазону(wh_t, пИ(al1, al2))))));

			a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
			c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
			bh7 = ПреведениеКДиапазону(wh_t, пИли(
				  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
				  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
			bl7 = ПреведениеКДиапазону(wh_t, пИли(
				  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
				  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));

			// add
			h = bh3;
			l = bl3;
			a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
			h = th;
			l = tl;
			a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
			c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
			b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
			c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
			d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
			
			bh3 = ПреведениеКДиапазону(wh_t, пИли
				(ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
			
			bl3 = ПреведениеКДиапазону(wh_t, пИли
				(ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
				ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));

			ah1 = bh0;
			ah2 = bh1;
			ah3 = bh2;
			ah4 = bh3;
			ah5 = bh4;
			ah6 = bh5;
			ah7 = bh6;
			ah0 = bh7;
			al1 = bl0;
			al2 = bl1;
			al3 = bl2;
			al4 = bl3;
			al5 = bl4;
			al6 = bl5;
			al7 = bl6;
			al0 = bl7;

			Если (i % 16) = 15 Тогда
				
				Для j = 0 По 15 Цикл 
					// add
					h = wh[j];
					l = wl[j];
					a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
					b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
					c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
					d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
					h = wh[(j + 9) % 16];
					l = wl[(j + 9) % 16];
					a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
					b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
					c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
					d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
					// sigma0
					th = wh[(j + 1) % 16];
					tl = wl[(j + 1) % 16];
					
					h = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(th, 1)), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(tl, (32 - 1))))),
						ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t,ПобитовыйСдвигВправоБеззнаковый(th, 8)), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(tl, (32 - 8))))), 
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(th, 7))))));

					l = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(tl, 1)), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(th, (32 - 1))))), 
						ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(tl, 8)), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(th, (32 - 8))))), 
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(tl, 7)), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(th, (32 - 7)))))))));

					a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
					b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
					c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
					d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
					// sigma1
					th = wh[(j + 14) % 16];
					tl = wl[(j + 14) % 16];

					h = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(th, 19)),
						ПреведениеКДиапазону(wh_t, пСдвигВлево(tl, (32 - 19))))), 
						ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(tl, (61 - 32))), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(th, (32 - (61 - 32)))))),
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(th, 6))))));

					l = ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(tl, 19)), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(th, (32 - 19))))), 
						ПреведениеКДиапазону(wh_t, пИсключительноеИли(
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(th, (61 - 32))), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(tl, (32 - (61 - 32)))))),
						ПреведениеКДиапазону(wh_t, пИли(
						ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(tl, 6)), 
						ПреведениеКДиапазону(wh_t, пСдвигВлево(th, (32 - 6)))))))));


					a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
					b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
					c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
					d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
					b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
					c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
					d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
					wh[j] = ПреведениеКДиапазону(wh_t, пИли(
							ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
							ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
					wl[j] = ПреведениеКДиапазону(wh_t, пИли(
							ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
							ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
				КонецЦикла;
			
			КонецЕсли;

		КонецЦикла;
		
		// add
		h = ah0;
		l = al0;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[0];
		l = hl[0];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
		ah0 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		al0 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
		hh[0] = ah0;
		hl[0] = al0;
		h = ah1;
		l = al1;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[1];
		l = hl[1];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));

		ah1 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		al1 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));

		hh[1] = ah1;
		hl[1] = al1;
		h = ah2;
		l = al2;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[2];
		l = hl[2];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
		ah2 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		al2 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
		hh[2] = ah2;
		hl[2] = al2;
		h = ah3;
		l = al3;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[3];
		l = hl[3];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
		ah3 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		hh[3] = ah3;

		al3 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
		hl[3] = al3;

		h = ah4;
		l = al4;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[4];
		l = hl[4];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
		ah4 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		hh[4] = ah4;

		al4 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
		hl[4] = al4;

		h = ah5;
		l = al5;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = пИ(h, 65535);
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[5];
		l = hl[5];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
		ah5 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		hh[5] = ah5;

		al5 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
		hl[5] = al5;

		h = ah6;
		l = al6;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[6];
		l = hl[6];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
		ah6 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		hh[6] = ah6;

		al6 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
		hl[6] = al6;

		h = ah7;
		l = al7;
		a = ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		h = hh[7];
		l = hl[7];
		a = a + ПреведениеКДиапазону(wh_t, пИ(l, 65535));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(l, 16));
		c = c + ПреведениеКДиапазону(wh_t, пИ(h, 65535));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(h, 16));
		b = b + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(a, 16));
		c = c + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(b, 16));
		d = d + ПреведениеКДиапазону(wh_t, ПобитовыйСдвигВправоБеззнаковый(c, 16));
		ah7 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(c, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(d, 16))));
		hh[7] = ah7;

		al7 = ПреведениеКДиапазону(wh_t, пИли(
			  ПреведениеКДиапазону(wh_t, пИ(a, 65535)), 
			  ПреведениеКДиапазону(wh_t, пСдвигВлево(b, 16))));
		hl[7] = al7;

		pos = pos + 128;
		n = n - 128; 
		
	КонецЦикла;

	Возврат n;

КонецФункции

Функция curve25519_sign(sm_t, m, n, sk, opt_rnd) 
	
	this = Новый Структура;
	
	this.Вставить("gf0", gf());

	this.Вставить("gf1", init_gf1());
	
	
	// If opt_rnd is provided, sm must have n + 128,
	// otherwise it must have n + 64 bytes.
	// Convert Curve25519 secret key into Ed25519 secret key (includes pub key).
	edsk_t = Crypt_ТипизированныеМассивы.Uint8Array("edsk", 64);
	
	edsk = edsk_t.edsk;
	
	p = Новый Массив;
	p.Добавить(gf());
	p.Добавить(gf());
	p.Добавить(gf());
	p.Добавить(gf());

	Для i = 0 По 31 Цикл
	  
	  edsk[i] = sk[i];
	  
	КонецЦикла;
	// Ensure private key is in the correct format.
	edsk[0] = ПреведениеКДиапазону(edsk_t, пИ(edsk[0], 248));
	edsk[31] = ПреведениеКДиапазону(edsk_t, пИ(edsk[31], 127));
	edsk[31] = ПреведениеКДиапазону(edsk_t, пИли(edsk[31], 64));
	scalarbase(p, edsk_t, this);
	
	Crypt_ОбщегоНазначенияКлиентСевер.СоздатьСубМассив(edsk_t, 32);
	
	pack(edsk_t.СубМассив, p);
	
	Crypt_ОбщегоНазначенияКлиентСевер.ПрименитьСубМассив(edsk_t);
	
	// Remember sign bit.
	
	signBit = пИ(edsk[63], 128);
	smlen = 0;
	
	Если opt_rnd <> Неопределено Тогда 
		
		smlen = crypto_sign_direct_rnd(sm_t, m, n, edsk, opt_rnd);
		
	Иначе
	
	    ВызватьИсключение "crypto_sign_direct not supported";			
		
	КонецЕсли;
	  
	// Copy sign bit from public key into signature.
	
	sm = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(sm_t).Данные;
	
	sm[63] = пИли(sm[63], signBit);
	  
	Возврат smlen;
	
КонецФункции

Функция curve25519_sign_open(m, sm, n, pk) 
	
	// Convert Curve25519 public key into Ed25519 public key.
	edpk_t = convertPublicKey(pk);
	
	edpk = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(edpk_t).Данные;
	
	// Restore sign bit from signature.
	edpk[31] = пИли(edpk[31], пИ(sm[63], 128));
	
	// Remove sign bit from signature.
	sm[63] = пИ(sm[63], 127);
	
	// Verify signed message.
	Возврат crypto_sign_open(m, sm, n, edpk);

КонецФункции

Функция crypto_sign_open(m, sm, n, pk) 
	
	t_t = Crypt_ТипизированныеМассивы.Uint8Array("t", 32);

	t = t_t.t;

	h_t = Crypt_ТипизированныеМассивы.Uint8Array("h", 64);

	h = h_t.h;
	
	p = Новый Массив;
	p.Добавить(gf());
	p.Добавить(gf());
	p.Добавить(gf());
	p.Добавить(gf());
	 
	q = Новый Массив;
	q.Добавить(gf()); 
	q.Добавить(gf());
	q.Добавить(gf());
	q.Добавить(gf());
	 
	mlen = -1;
		
	Если (n < 64) Тогда 
		
		Возврат -1;

	КонецЕсли;

	Если unpackneg(q, pk) Тогда 
		
		Возврат -1;
		
	КонецЕсли;
	
	Для i = 0 По n - 1 Цикл 
		
    	m[i] = sm[i];
		
	КонецЦикла;
	
	
	Для i = 0 По 31 Цикл 
		
		m[i + 32] = pk[i];
		
	КонецЦикла;
	
	n1 = n;
	crypto_hash(h, m, n1);
	reduce(h_t);
	
	this = Новый Структура;
	this.Вставить("gf0", gf());
	this.Вставить("gf1", init_gf1());
	
	scalarmult(p, q, h, this);
	
	sm_sub_t = Crypt_ТипизированныеМассивы.Uint8Array("sm_sub", 32);
	
	sm_sub_t.sm_sub = Crypt_ОбщегоНазначенияКлиентСевер.СубМассив(sm, 32); 
	
	scalarbase(q, sm_sub_t, this);
	
    add(p, q, this);
    pack(t, p);
	
 	n = n - 64;
	
	Если (crypto_verify_32(sm, 0, t, 0)) <> 0 Тогда
		
		Для i = 0 По n - 1 Цикл
			
			m[i] = 0;
			
		КонецЦикла;
		
		Возврат -1;
		
	КонецЕсли;
	
	Для i = 0 По n - 1 Цикл 
		
		m[i] = sm[i + 64];

	КонецЦикла;

	mlen = n;
	
	Возврат mlen;

КонецФункции

Функция unpackneg(r, p)
	
	t = gf();
	chk = gf();
	num = gf();
	den = gf();
	den2 = gf();
	den4 = gf();
	den6 = gf();
	D = init_t_d();
	gf0 = gf();
	gf1 = init_gf1();
	I = init_t_i();
	
	set25519(r[2].r, gf1.r);	
	unpack25519(r[1].r, p);
	S(num.r, r[1].r);
	M(den.r, num.r, D.r);
	Z(num.r, num.r, r[2].r);
	A(den.r, r[2].r, den.r);
	S(den2.r, den.r);
	S(den4.r, den2.r);
	M(den6.r, den4.r, den2.r);
	M(t.r, den6.r, num.r);
	M(t.r, t.r, den.r);
	pow2523(t.r, t.r);
	M(t.r, t.r, num.r);
	M(t.r, t.r, den.r);
	M(t.r, t.r, den.r);
	M(r[0].r, t.r, den.r);
	S(chk.r, r[0].r);
	M(chk.r, chk.r, den.r);
	
	Если neq25519(chk.r, num.r) <> 0 Тогда 
		
		M(r[0].r, r[0].r, I.r);
		
	КонецЕсли;
	
	S(chk.r, r[0].r);
	M(chk.r, chk.r, den.r);
	
	Если neq25519(chk.r, num.r) <> 0 Тогда
		
		Возврат -1;
		
	КонецЕсли;
	
	Если par25519(r[0].r) = пСдвигВПраво(p[31], 7) Тогда 
		
		Z(r[0].r, gf0.r, r[0].r);
		
	КонецЕсли;
	
	M(r[3].r, r[0].r, r[1].r);
	
	Возврат 0;
	
КонецФункции

Функция neq25519(a, b) 
	
	c_t = Crypt_ТипизированныеМассивы.Uint8Array("c", 32);
	d_t = Crypt_ТипизированныеМассивы.Uint8Array("d", 32);

	c = c_t.c;
	d = d_t.d;

	pack25519(c, a);
	pack25519(d, b);

	Возврат crypto_verify_32(c, 0, d, 0);

КонецФункции

Функция crypto_verify_32(x, xi, y, yi) 
	
  Возврат vn(x, xi, y, yi, 32);
  
КонецФункции

Функция vn(x, xi, y, yi, n) 
	
	d = 0;
	
	Для i = 0 По n - 1 Цикл 
		 
		d = пИли(d, пИсключительноеИли(x[xi + i], y[yi + i]));

	КонецЦикла;

	Возврат пИ(1, ПобитовыйСдвигВправоБеззнаковый((d - 1), 8)) - 1;

КонецФункции

Процедура pow2523(o, i) 

	c_r = gf();

	c = c_r.r;

	Для a = 0 По 15 Цикл 
		
		c[a] = i[a];
		
	КонецЦикла;

	a = 250;
	
	Пока a >= 0 Цикл
		
		S(c, c);
		
		Если a <> 1 Тогда 
			
			M(c, c, i);
			
		КонецЕсли;

		a = a - 1;
	КонецЦикла;

	Для a = 0 По 15 Цикл 

		o[a] = c[a];

	КонецЦикла;

КонецПроцедуры

Функция convertPublicKey(pk) 
	
  z_t = Crypt_ТипизированныеМассивы.Uint8Array("z", 32);
  x = gf();
  a = gf();
  b = gf();
  z = z_t.z;
  
  gf1 = init_gf1();
  
  unpack25519(x.r, pk);
  
  A(a.r, x.r, gf1.r);
  
  Z(b.r, x.r, gf1.r);
  
  inv25519(a.r, a.r);
  
  M(a.r, a.r, b.r);
  
  pack25519(z, a.r);
  
  Возврат z_t;
  
КонецФункции

Функция crypto_scalarmult_base(q, n) 
	
  this = init();	
	
  Возврат crypto_scalarmult(q, n, this.t9);

КонецФункции

Функция init_gf1()
	
	init = Новый Массив;
	init.Добавить(1);
	gf1 = gf(init);
	
	Возврат gf1;
	
КонецФункции

Функция init_t_121665()
	
	м = Новый Массив;
	м.Добавить(56129);
	м.Добавить(1);


	t_121665 = gf(м);
	
	Возврат t_121665;

КонецФункции

Функция init_t_d()
	
	м = Новый Массив;
	м.Добавить(30883);
	м.Добавить(4953);
	м.Добавить(19914);
	м.Добавить(30187);
	м.Добавить(55467);
	м.Добавить(16705);
	м.Добавить(2637);
	м.Добавить(112);
	м.Добавить(59544);
	м.Добавить(30585);
	м.Добавить(16505);
	м.Добавить(36039);
	м.Добавить(65139);
	м.Добавить(11119);
	м.Добавить(27886);
	м.Добавить(20995);
	
	t_d = gf(м);
	
	Возврат t_d;
	
КонецФункции

Функция init_t_d2()
	
	м = Новый Массив;
	м.Добавить(61785);
	м.Добавить(9906);
	м.Добавить(39828);
	м.Добавить(60374);
	м.Добавить(45398);
	м.Добавить(33411);
	м.Добавить(5274);
	м.Добавить(224);
	м.Добавить(53552);
	м.Добавить(61171);
	м.Добавить(33010);
	м.Добавить(6542);
	м.Добавить(64743);
	м.Добавить(22239);
	м.Добавить(55772);
	м.Добавить(9222);
	
	t_d2 = gf(м);
	
	Возврат t_d2;
	
КонецФункции

Функция init_t_x()
	
	м = Новый Массив;
	м.Добавить(54554);
	м.Добавить(36645);
	м.Добавить(11616);
	м.Добавить(51542);
	м.Добавить(42930);
	м.Добавить(38181);
	м.Добавить(51040);
	м.Добавить(26924);
	м.Добавить(56412);
	м.Добавить(64982);
	м.Добавить(57905);
	м.Добавить(49316);
	м.Добавить(21502);
	м.Добавить(52590);
	м.Добавить(14035);
	м.Добавить(8553);
	
	t_x = gf(м);
	
	Возврат t_x;
	
КонецФункции

Функция init_t_y()
	
	м = Новый Массив;
	м.Добавить(26200);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	м.Добавить(26214);
	
	t_y = gf(м);

	Возврат t_y;
	
КонецФункции

Функция init_t_i()
	
	м = Новый Массив;
	м.Добавить(41136);
	м.Добавить(18958);
	м.Добавить(6951);
	м.Добавить(50414);
	м.Добавить(58488);
	м.Добавить(44335);
	м.Добавить(6150);
	м.Добавить(12099);
	м.Добавить(55207);
	м.Добавить(15867);
	м.Добавить(153);
	м.Добавить(11085);
	м.Добавить(57099);
	м.Добавить(20417);
	м.Добавить(9344);
	м.Добавить(11139);
	
	t_i = gf(м);
	
	Возврат t_i;
	
КонецФункции

Процедура pack(r, p) 
	
	tx = gf();
	ty = gf();
	zi = gf();

	inv25519(zi.r, p[2].r);

	M(tx.r, p[0].r, zi.r);
	M(ty.r, p[1].r, zi.r);
	pack25519(r, ty.r);
	
	r[31] = пИсключительноеИли((пСдвигВлево(par25519(tx), 7)), r[31]);
	
КонецПроцедуры

Функция crypto_scalarmult(q, n, p)
	
	z_t = Crypt_ТипизированныеМассивы.Uint8Array("z", 32);
	x_t = Crypt_ТипизированныеМассивы.Float64Array("x", 80);
	
	t_121665 = init_t_121665(); 
	
	t_d = init_t_d();
	
	t_d2 = init_t_d2();
	
	t_x = init_t_x();
	
	t_y = init_t_y();
		
	t_i = init_t_i();
	
	z = z_t.z;
	x = x_t.x;
	
	a_t = gf();
	a = a_t.r;
	
	b_t = gf();
	b = b_t.r;
	
	c_t = gf();
	c = c_t.r;
	
	d_t = gf();
	d = d_t.r;
	
	e_t = gf();
	e = e_t.r;
	
	f_t = gf(); 
	f = f_t.r;
	
	
	Для i = 0 По 31 Цикл 
   
		z[i] = n[i];
		
	КонецЦикла;
	

	z[31] = пИли(пИ(n[31], 127), 64);
	z[0] = пИ(z[0], 248);
	
	unpack25519(x, p);
	
	Для i = 0 По 15 Цикл 
		
	    b[i] = x[i];
	    d[i] = 0;
		a[i] = 0;
		c[i] = 0;
		
	КонецЦикла;
 
	a[0] = 1;
	d[0] = 1; 
	
	i = 254;
	
	Пока i >= 0 Цикл
		
		r = пИ(ПобитовыйСдвигВправоБеззнаковый(z[ПобитовыйСдвигВправоБеззнаковый(i, 3)], пИ(i, 7)), 1);
	
		sel25519(a, b, r);
	    sel25519(c, d, r);
		
		A(e, a, c);
	    Z(a, a, c);
	    A(c, b, d);
	    Z(b, b, d);
		
		S(d, e);
	    S(f, a);
	    M(a, c, a);
	    M(c, b, e);
	    A(e, a, c);
	    Z(a, a, c);
	    S(b, a);
	    Z(c, d, f);
	    M(a, c, t_121665.r);
	    A(a, a, d);
	    M(c, c, a);
	    M(a, d, f);
	    M(d, b, x);
	    S(b, e);
	    sel25519(a, b, r);
	    sel25519(c, d, r);
		
		i = i - 1;
		
	КонецЦикла;
	
	Для i = 0 По 15 Цикл 
		
		x[i + 16] = a[i];
	    x[i + 32] = c[i];
	    x[i + 48] = b[i];
	    x[i + 64] = d[i];
		
	КонецЦикла;
	
	x32 = Crypt_ОбщегоНазначенияКлиентСевер.СубМассив(x, 32);
	x16 = Crypt_ОбщегоНазначенияКлиентСевер.СубМассив(x, 16);
	
	inv25519(x32, x32);
	M(x16, x16, x32);
	pack25519(q, x16);
	
	Возврат 0;
	
	
КонецФункции

#КонецОбласти
///////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

Функция generateKeyPair(hSeed, ИмяМассива = Неопределено) Экспорт
	
	Seed = hSeed;
	
	Если ТипЗнч(hSeed) = ТипЗнч(Новый Структура) Тогда
		
		Если НЕ hSeed.Свойство("ДиапазонЗначенийМин") 
		   И НЕ hSeed.Свойство("ДиапазонЗначенийМакс")
		   И НЕ hSeed.Свойство("Разярдность") Тогда 
		   
		   ВызватьИсключение "Структура не соответсвует типизированному массиву.";
	    Иначе
		   
			Если ИмяМассива = Неопределено Тогда 
				
				ВызватьИсключение "Имя типизированного массива не указано";
				
			КонецЕсли;
		   
		КонецЕсли;
		
		Seed = hSeed[ИмяМассива];
		
	ИначеЕсли ТипЗнч(hSeed) <> ТипЗнч(Новый Массив) Тогда 
		
		ВызватьИсключение "Не поддерживаемый тип значения: " + ТипЗнч(hSeed);
		
	КонецЕсли;
	
	sk_t = Crypt_ТипизированныеМассивы.Uint8Array("sk", 32);
	pk_t = Crypt_ТипизированныеМассивы.Uint8Array("pk", 32);
	
	sk = sk_t.sk;
	pk = pk_t.pk;
	
	Для i = 0 По 31 Цикл 
		
		 sk[i] = seed[i]; 	
		
	КонецЦикла;
	
	crypto_scalarmult_base(pk, sk);
	
	// Turn secret key into the correct format.
	sk[0] = ПреведениеКДиапазону(sk_t, пИ(sk[0], 248));
	sk[31] = ПреведениеКДиапазону(sk_t, пИ(sk[31], 127));
	sk[31] = ПреведениеКДиапазону(sk_t, пИли(sk[31], 64));
	
	// Remove sign bit from public key.
	pk[31] = ПреведениеКДиапазону(pk_t, пИ(pk[31], 127));
	
	result = Новый Структура;
	
	result.Вставить("sk", sk_t);
	result.Вставить("pk", pk_t);
	
	Возврат result; 
	
КонецФункции

Функция sign(secretKey, msg, opt_random = Неопределено) Экспорт
	
	Если secretKey.Количество() <> 32 Тогда
		
		ВызватьИсключение "wrong secret key length";
		
	КонецЕсли;
	
	Если opt_random <> Неопределено Тогда 
		
		Если ТипЗнч(opt_random) <> ТипЗнч(Новый Массив) Тогда 
			
			Если opt_random.Количество() > 64 Тогда 
				
				ВызватьИсключение "wrong random data length";
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(opt_random) <> ТипЗнч(Новый Структура) Тогда
			
			МассивДанных = Crypt_ТипизированныеМассивы.ПолучитьДанныеМассива(opt_random);
			
			Если МассивДанных.Количество() > 64 Тогда 
				
				ВызватьИсключение "wrong random data length";
				
			КонецЕсли;
 		
		КонецЕсли;
		
	Иначе
		
		opt_random_t = Crypt_ТипизированныеМассивы.Uint8Array("opt_random", 64);
		
		opt_random = opt_random_t.opt_random;
		
		Для сч = 0 По 63 Цикл
			
			opt_random[сч] = Crypt_ОбщегоНазначенияКлиентСевер.ПолучитьСлучайноеЧисло();
			
		КонецЦикла;
		
	КонецЕсли;
	
	buf_t = Crypt_ТипизированныеМассивы.Uint8Array("buf",?(opt_random <> Неопределено, 128, 64) + msg.Количество()); 
	
	curve25519_sign(buf_t, msg, msg.Количество(), secretKey, opt_random_t); 			
	
	signature_t = Crypt_ТипизированныеМассивы.Uint8Array("signature", 64);
	
	signature = signature_t.signature;
	
	buf = buf_t.buf;
	
	Для i = 0 По 63 Цикл
		
		signature[i] = buf[i];	
		
	КонецЦикла;
	
	Возврат signature;
	
КонецФункции

Функция verify(publicKey, msg, signature) Экспорт
	
	Если signature.Количество() <> 64 Тогда 

		ВызватьИсключение "wrong signature length";

	КонецЕсли;

	Если publicKey.Количество() <> 32 Тогда

		ВызватьИсключение "wrong public key length";

	КонецЕсли;

	sm_t = Crypt_ТипизированныеМассивы.Uint8Array("sm", 64 + msg.Количество());

	m_t = Crypt_ТипизированныеМассивы.Uint8Array("m", 64 + msg.Количество());

	sm = sm_t.sm;
	m = m_t.m;
	
	Для i = 0 По 63 Цикл 

		sm[i] = signature[i];

	КонецЦикла;

	Для i = 0 По msg.Количество() - 1 Цикл 

		sm[i + 64] = msg[i];

	КонецЦикла;
	
	Возврат (curve25519_sign_open(m, sm, sm.Количество(), publicKey) >= 0);
	
КонецФункции

Функция sharedKey(secretKey, publicKey) Экспорт
		
	Если publicKey.Количество() <> 32 Тогда 

		ВызватьИсключение "wrong public key length";

	КонецЕсли;

	Если secretKey.Количество() <> 32 Тогда 

		ВызватьИсключение "wrong secret key length";

	КонецЕсли;

	sharedKey_t = Crypt_ТипизированныеМассивы.Uint8Array("sharedKey", 32);

	sharedKey = sharedKey_t.sharedKey;

	crypto_scalarmult(sharedKey, secretKey, publicKey);

	Возврат sharedKey_t;	
	
КонецФункции

#КонецОбласти
///////////////////////////////////////////////////////////////////////////////////