///////////////////////////////////////////////////////////////////////////////////
//
// MIT License Copyright (c) 2020 AcrylPlatform.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights 
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
// copies of the Software, and to permit persons to whom the Software 
// is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be 
// included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT 
// SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE 
// OR OTHER DEALINGS IN THE SOFTWARE.
//
///////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Перем ИндентификаторЗадания;

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьКошелек(Команда)
	
	Если Не ЗначениеЗаполнено(Seed) Тогда
		
		ПоказатьПредупреждение(, "Не указана Секретная фраза. 
								 |Укажите секретную фразу или создайте новую!", , "Внимание");
		Возврат;
		
	КонецЕсли;
	   
	Режим = РежимДиалогаВопрос.ДаНет;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
	
	ПоказатьВопрос(Оповещение, "Внимание! Секретная фраза не сохраняется в базе! Если вы ее не записали, вы не сможете востановить доступ в ваш кошелек! Вы уверенны что хотите продолжить?", Режим, 20);
	
КонецПроцедуры

&НаКлиенте
Процедура СгенирироватьНовые(Команда)
	
	Seed = AP_SeedWordsList.ПолучитьSeedList();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		
        Возврат;
		
	КонецЕсли;
	
	КлючеваяФраза = AP_КлючевыеФарзыКлиентСервер.ПолучитьКлючевуюФразу();
	
	мКлюч = Crypt_Blake2b.blake2b(КлючеваяФраза);
	
	Ключ = Crypt_StringBytes.БайтыВСтроку(мКлюч.out, "raw");
	
	outSeed = Crypt_StringBytes.СтрокуВБайты(
			  AP_WalletКлиентСервер.Зашифровать(Ключ, Seed), "raw");

	
	ИндентификаторЗадания = ВыполнитьСозданиеКошелька(outSeed, TestNet);
	
	ПодключитьОбработчикОжидания("СозданиеКошелькаЗавершение", 3);
	
	Элементы.Seed.Видимость = Ложь;
	Элементы.TestNet.Видимость = Ложь;
	
	Элементы.ФормаКоманднаяПанель.Видимость = Ложь;
	
	Элементы.грЭтап1.Видимость = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьСозданиеКошелька(Seed, TestNet)

    ПараметрыЗадания = Новый Массив;
    ПараметрыЗадания.Добавить(Seed);
	ПараметрыЗадания.Добавить(TestNet);
    
    ФоновоеЗадание = ФоновыеЗадания.Выполнить("AP_WalletВызовСервера.СоздатьКошелек", 
       		 		  ПараметрыЗадания, , "Создание кошелька"); 
					  
	Возврат ФоновоеЗадание.УникальныйИдентификатор;
    
КонецФункции
		 
&НаКлиенте
Процедура СозданиеКошелькаЗавершение()
	
	СостояниеЗадания = СозданиеКошелькаЗавершениеНаСервере(ИндентификаторЗадания);

	Если СостояниеЗадания <> 0 Тогда 
		
		Элементы.грЭтап1.Видимость = Ложь;
		ОтключитьОбработчикОжидания("СозданиеКошелькаЗавершение");

	КонецЕсли;
		
	Если СостояниеЗадания = 1 Тогда 
	
		Элементы.грГотово.Видимость = Истина;			
		
	ИначеЕсли СостояниеЗадания = 2 Тогда
		
		Элементы.грОшибка.Видимость = Истина;
		
		Элементы.Декорация6.Заголовок = "Завершено аварийно. Повторите попытку";

	ИначеЕсли СостояниеЗадания = 3 Тогда 
		
		Элементы.грОшибка.Видимость = Истина;
		
		Элементы.Декорация6.Заголовок = "Завершено отменено.";
		
	КонецЕсли;
	 
КонецПроцедуры
 
 &НаСервереБезКонтекста
Функция СозданиеКошелькаЗавершениеНаСервере(ИндентификаторЗадания)
	
	Состояние = 0;
	
	Отбор = Новый Структура("УникальныйИдентификатор", ИндентификаторЗадания); 
	
	СписокФоновыхЗадач = ФоновыеЗадания.ПолучитьФоновыеЗадания();
	
	Если СписокФоновыхЗадач.Количество() <> 0 Тогда                    
		
		ФоновоеЗадание = СписокФоновыхЗадач[0];
		
	КонецЕсли;

	Если ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда 

		Состояние = 1;
		
	ИначеЕсли ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда 

		Состояние = 2;
		
	ИначеЕсли ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.Отменено Тогда 

		Состояние = 3;
		
	КонецЕсли;

	Возврат Состояние;
	 
КонецФункции
	
#КонецОбласти